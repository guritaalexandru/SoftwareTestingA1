============================= test session starts ==============================
platform darwin -- Python 3.9.18, pytest-7.4.3, pluggy-1.3.0 -- /usr/local/opt/python@3.9/bin/python3.9
cachedir: .pytest_cache
rootdir: /Users/antongustavsson/ASD/SoftwareTestingA1-Group11/A1_unit_testing_students
plugins: mock-3.12.0
collecting ... collected 52 items

test_regression.py::test_check_cart_empty_cart PASSED                    [  1%]
test_regression.py::test_check_cart_insufficient_funds PASSED            [  3%]
test_regression.py::test_check_cart_invalid_input PASSED                 [  5%]
test_regression.py::test_check_cart_contents PASSED                      [  7%]
test_regression.py::test_check_cart_case_sensitivity PASSED              [  9%]
test_regression.py::test_check_password_no_capital PASSED                [ 11%]
test_regression.py::test_check_password_no_numeral PASSED                [ 13%]
test_regression.py::test_check_password_too_short PASSED                 [ 15%]
test_regression.py::test_check_password_no_special_char PASSED           [ 17%]
test_regression.py::test_check_password_valid PASSED                     [ 19%]
test_regression.py::test_logout_float_input PASSED                       [ 21%]
test_regression.py::test_logout_list_input PASSED                        [ 23%]
test_regression.py::test_logout_empty_input PASSED                       [ 25%]
test_regression.py::test_checkout_sufficient_funds PASSED                [ 26%]
test_regression.py::test_checkout_product_zero_units_single PASSED       [ 28%]
test_regression.py::test_checkout_product_zero_units_multi PASSED        [ 30%]
test_regression.py::test_checkout_just_enough_money PASSED               [ 32%]
test_regression.py::test_checkout_wallet_update PASSED                   [ 34%]
test_regression.py::test_display_csv_as_table_with_pdf_file PASSED       [ 36%]
test_regression.py::test_display_csv_as_table_with_jpg_file PASSED       [ 38%]
test_regression.py::test_display_csv_as_table_with_excel_file PASSED     [ 40%]
test_regression.py::test_display_csv_as_table_non_existence_file PASSED  [ 42%]
test_regression.py::test_display_csv_as_table_empty_file_name PASSED     [ 44%]
test_regression.py::test_display_filtered_csv_as_table_none_search_parameter PASSED [ 46%]
test_regression.py::test_display_filtered_csv_as_table_empty_parameter PASSED [ 48%]
test_regression.py::test_display_filtered_csv_as_table_list_search_parameter PASSED [ 50%]
test_regression.py::test_display_filtered_csv_as_table_dictionary_search_parameter PASSED [ 51%]
test_regression.py::test_display_filtered_csv_as_table_int_search_parameter PASSED [ 53%]
test_regression.py::test_display_filtered_csv_as_table_boolean_search_parameter PASSED [ 55%]
test_regression.py::test_checkout_and_payment_invalid_login_info[invalid_string] PASSED [ 57%]
test_regression.py::test_checkout_and_payment_invalid_login_info[12345] PASSED [ 59%]
test_regression.py::test_checkout_and_payment_invalid_login_info[4.56] PASSED [ 61%]
test_regression.py::test_checkout_and_payment_invalid_login_info[invalid_login_info3] PASSED [ 63%]
test_regression.py::test_checkout_and_payment_invalid_login_info[invalid_login_info4] PASSED [ 65%]
test_regression.py::test_checkout_and_payment_invalid_login_info[invalid_login_info5] PASSED [ 67%]
test_regression.py::test_checkout_and_payment_scenarios[mock_input_value0-You have been logged out.] PASSED [ 69%]
test_regression.py::test_checkout_and_payment_scenarios[mock_input_value1-You have been logged out.] PASSED [ 71%]
test_regression.py::test_checkout_and_payment_scenarios[mock_input_value2-Apple added to your cart.] PASSED [ 73%]
test_regression.py::test_checkout_and_payment_scenarios[mock_input_value3-\nInvalid input. Please try again.] PASSED [ 75%]
test_regression.py::test_checkout_and_payment_scenarios[mock_input_value4-\nInvalid input. Please try again.] PASSED [ 76%]
test_regression.py::test_checkout_and_payment_scenarios[mock_input_value5-\nInvalid input. Please try again.] PASSED [ 78%]
test_regression.py::test_checkout_and_payment_scenarios[mock_input_value6-\nInvalid input. Please try again.] PASSED [ 80%]
test_regression.py::test_checkout_and_payment_print_products PASSED      [ 82%]
test_regression.py::test_checkout_and_payment_session_management PASSED  [ 84%]
test_regression.py::test_load_products_from_csv_huge_file PASSED         [ 86%]
test_regression.py::test_load_products_from_csv_added_head PASSED        [ 88%]
test_regression.py::test_load_products_from_csv_added_column_1 PASSED    [ 90%]
test_regression.py::test_load_products_from_csv_added_column_2 PASSED    [ 92%]
test_regression.py::test_load_products_from_csv_added_column_3 PASSED    [ 94%]
test_regression.py::test_change_details_input_not_Y PASSED               [ 96%]
test_regression.py::test_change_details_address FAILED                   [ 98%]
test_regression.py::test_change_details_credit_card FAILED               [100%]

=================================== FAILURES ===================================
_________________________ test_change_details_address __________________________

test_entry = {'address': 'Dag Hammarskälds Väg', 'credit': {'cvv': '999', 'expiry': '11/25', 'number': '0365027409470925'}, 'email': 'test@gmail.com', 'password': 'test', ...}

    def test_change_details_address(test_entry):
        with patch("builtins.input", side_effect=["Y", "a", "Raketvägen"]):
>           assert change_details(test_entry) == {
                "username": "test",
                "password": "test",
                "address": "Raketvägen",
                "phone": "07099999999",
                "email": "test@gmail.com",
                "credit": {
                    "number": "0365027409470925",
                    "expiry": "11/25",
                    "cvv": "999",
                },
            }
E           AssertionError: assert None == {'address': 'Raketvägen', 'credit': {'cvv': '999', 'expiry': '11/25', 'number': '0365027409470925'}, 'email': 'test@gmail.com', 'password': 'test', ...}
E            +  where None = change_details({'address': 'Dag Hammarskälds Väg', 'credit': {'cvv': '999', 'expiry': '11/25', 'number': '0365027409470925'}, 'email': 'test@gmail.com', 'password': 'test', ...})

test_regression.py:888: AssertionError
_______________________ test_change_details_credit_card ________________________

test_entry = {'address': 'Dag Hammarskälds Väg', 'credit': {'cvv': '999', 'expiry': '11/25', 'number': '0365027409470925'}, 'email': 'test@gmail.com', 'password': 'test', ...}

    def test_change_details_credit_card(test_entry):
        with patch(
            "builtins.input", side_effect=["Y", "c", "9999999999999999", "99/99", "999"]
        ):
>           assert change_details(test_entry) == {
                "username": "test",
                "password": "test",
                "address": "Dag Hammarskälds Väg",
                "phone": "07099999999",
                "email": "test@gmail.com",
                "credit": {
                    "number": "9999999999999999",
                    "expiry": "99/99",
                    "cvv": "999",
                },
            }
E           AssertionError: assert None == {'address': 'Dag Hammarskälds Väg', 'credit': {'cvv': '999', 'expiry': '99/99', 'number': '9999999999999999'}, 'email': 'test@gmail.com', 'password': 'test', ...}
E            +  where None = change_details({'address': 'Dag Hammarskälds Väg', 'credit': {'cvv': '999', 'expiry': '11/25', 'number': '0365027409470925'}, 'email': 'test@gmail.com', 'password': 'test', ...})

test_regression.py:906: AssertionError
=========================== short test summary info ============================
FAILED test_regression.py::test_change_details_address - AssertionError: asse...
FAILED test_regression.py::test_change_details_credit_card - AssertionError: ...
========================= 2 failed, 50 passed in 0.54s =========================
